{
    "actionTitle": {
        "message": "Download media",
        "description": "The contents of the context menu when hovering over the extension icon."
    },
    "extensionDescription": {
        "message": "Download videos, music and live streams to your device!",
        "description": "The description of the extension shown in the browser's settings page."
    },
    "errorTitle1": {
        "message": "Something went wrong!",
        "description": "The 1st title of the error popup, randomly selects one of the titles when there is an error."
    },
    "errorTitle2": {
        "message": "Oops!",
        "description": "The 2nd title of the error popup."
    },
    "errorTitle3": {
        "message": "Uh oh!",
        "description": "The 3rd title of the error popup."
    },
    "errorTitle4": {
        "message": "Error!",
        "description": "The 4th title of the error popup."
    },
    "errorTitle5": {
        "message": "Annnd it broke!",
        "description": "The 5th title of the error popup."
    },
    "errorTitle6": {
        "message": "Oh no!",
        "description": "The 6th title of the error popup."
    },
    "reportIssue": {
        "message": "Report issue",
        "description": "The text of the link to report an issue in the error popup."
    },
    "okButton": {
        "message": "OK",
        "description": "The text of the OK button in the error popup."
    },
    "requestText": {
        "message": "$METHOD$ request from $SOURCE$",
        "description": "The text showing which type of request is being made to load the media.",
        "placeholders": {
            "METHOD": {
                "content": "$1",
                "example": "GET"
            },
            "SOURCE": {
                "content": "$2",
                "example": "https://example.com/video.mp4"
            }
        }
    },
    "requestMethodUnknown": {
        "message": "Unknown",
        "description": "The text shown when the request method is not recognized."
    },
    "requestSourceUnknown": {
        "message": "an unknown source",
        "description": "The text shown when the request source is not recognized."
    },
    "sizeText": {
        "message": "Size",
        "description": "The text above the size selector in the media list."
    },
    "copyURL": {
        "message": "Copy URL",
        "description": "The text of the button to copy the media URL to clipboard."
    },
    "URLCopyError": {
        "message": "Failed to copy URL to clipboard",
        "description": "The error message shown when the URL copy operation fails."
    },
    "previewMedia": {
        "message": "Preview",
        "description": "The text of the preview button in the media list."
    },
    "downloadMedia": {
        "message": "Download",
        "description": "The text of the download button in the media list."
    },
    "endOfMediaList": {
        "message": "End of media list",
        "description": "That's all we could find! If you don't see the media you're looking for, try starting the media then refreshing the list. If you still don't see it, change media detection method in the settings."
    },
    "listLoadError": {
        "message": "Error retrieving media requests. Here's what went wrong: $ERROR$",
        "description": "The error message shown when the media list fails to load.",
        "placeholders": {
            "ERROR": {
                "content": "$1",
                "example": "Network error"
            }
        }
    },
    "listClearError": {
        "message": "Error clearing media list. Here's what went wrong: $ERROR$",
        "description": "The error message shown when the media list fails to clear.",
        "placeholders": {
            "ERROR": {
                "content": "$1",
                "example": "Network error"
            }
        }
    },
    "unknownSize": {
        "message": "Unknown size",
        "description": "The text shown when the size of the media can't be parsed."
    },
    "downloadError": {
        "message": "Error downloading media. Here's what went wrong: $ERROR$",
        "description": "The error message shown when the media download fails.",
        "placeholders": {
            "ERROR": {
                "content": "$1",
                "example": "Network error"
            }
        }
    },
    "homeTab": {
        "message": "Home",
        "description": "The name of the home tab in the popup."
    },
    "settingsTab": {
        "message": "Settings",
        "description": "The name of the settings tab in the popup."
    },
    "clearListButton": {
        "message": "Clear list",
        "description": "The label of the button to clear the media list."
    },
    "refreshListButton": {
        "message": "Refresh list",
        "description": "The label of the button to refresh the media list."
    },
    "detectionMethodTitle": {
        "message": "Detection method",
        "description": "The title of the detection method section in the settings tab."
    },
    "needToRefreshListWarning": {
        "message": "⚠️ After changing this, click on \"Refresh list\" to see the changes!",
        "description": "The warning shown below the detection method title in the settings tab."
    },
    "urlDetectionExplain": {
        "message": "Detection by checking if the URL contains a known media type (for example .mp4, .m3u8). It's fast, but some sites don't serve medias through these kind of URLs, so it might not detect everything.",
        "description": "The explanation of URL-based detection method shown in a tooltip."
    },
    "urlDetectionCheckbox": {
        "message": "Detection via URL",
        "description": "The label of the checkbox to enable URL-based detection method."
    },
    "mimeDetectionExplain": {
        "message": "Detection by checking the server's MIME response (for example video/mp4, application/vnd.apple.mpegurl). It's slower than URL detection as the add-on needs to monitor every request and response, but more reliable.",
        "description": "The explanation of MIME-based detection method shown in a tooltip."
    },
    "mimeDetectionCheckbox": {
        "message": "Detection via server's MIME response",
        "description": "The label of the checkbox to enable MIME-based detection method."
    },
    "downloadMethodTitle": {
        "message": "Download method",
        "description": "The title of the download method section in the settings tab."
    },
    "browserDownloadExplain": {
        "message": "Download the media using the browser's native download manager. Fast and handles disconnects, but only works on some sites and on some browsers (Firefox for PC).",
        "description": "The explanation of native browser download method shown in a tooltip."
    },
    "browserDownloadCheckbox": {
        "message": "Native browser download",
        "description": "The label of the checkbox to enable native browser download method."
    },
    "fetchDownloadExplain": {
        "message": "Download the media using the Fetch API. Works on most sites and browsers, but can be slower and doesn't handle disconnects well.",
        "description": "The explanation of Fetch API download method shown in a tooltip."
    },
    "fetchDownloadCheckbox": {
        "message": "Fetch API",
        "description": "The label of the checkbox to enable Fetch API download method."
    },
    "streamDownloadTitle": {
        "message": "Stream download preference",
        "description": "The title of the stream download preference section in the settings tab."
    },
    "streamFileDownloadExplain": {
        "message": "Download the stream manifest file (.m3u8, .mpd) directly. You will need a media player that supports these formats (like VLC) to view them. Lighter downloads, but you will need to be online with a working server to play the file. Some servers also block playback this way.",
        "description": "The explanation of stream manifest download method shown in a tooltip."
    },
    "streamFileDownloadCheckbox": {
        "message": "Download stream manifest",
        "description": "The label of the checkbox to enable stream manifest download method."
    },
    "offlineDownloadExplain": {
        "message": "Convert the stream into a single offline video file (.ts or .zip) after downloading. This takes more time and storage, but the resulting file can be watched offline.",
        "description": "The explanation of offline video file download method shown in a tooltip."
    },
    "offlineDownloadChecbox": {
        "message": "Convert to offline video file",
        "description": "The label of the checkbox to enable offline video file download method."
    },
    "streamQualityTitle": {
        "message": "Stream quality preference",
        "description": "The title of the stream quality preference section in the settings tab."
    },
    "askStreamQualityExplain": {
        "message": "Always ask which quality to download when downloading a stream.",
        "description": "The explanation of 'Always ask' stream quality preference shown in a tooltip."
    },
    "askStreamQualityCheckbox": {
        "message": "Always ask me",
        "description": "The label of the radio button to enable 'Always ask' stream quality preference."
    },
    "highestStreamQualityExplain": {
        "message": "Always download the highest available quality for a stream. Better quality but larger files and slower downloads.",
        "description": "The explanation of 'Always highest' stream quality preference shown in a tooltip."
    },
    "highestStreamQualityCheckbox": {
        "message": "Always highest quality",
        "description": "The label of the radio button to enable 'Always highest' stream quality preference."
    },
    "lowestStreamQualityExplain": {
        "message": "Always download the lowest available quality for a stream. Lower quality but smaller files and faster downloads.",
        "description": "The explanation of 'Always lowest' stream quality preference shown in a tooltip."
    },
    "lowestStreamQualityCheckbox": {
        "message": "Always lowest quality",
        "description": "The label of the radio button to enable 'Always lowest' stream quality preference."
    },
    "mpdFixExplain": {
        "message": "This will modify the .mpd file you download to only include the quality you download. Otherwise, players like VLC will not play the file because it will try to request a quality you don't have downloaded.",
        "description": "The explanation of the MPD fix option shown in a tooltip."
    },
    "mpdFixCheckbox": {
        "message": "Fix MPD files (recommended)",
        "description": "The label of the checkbox to enable the MPD fix option."
    },
    "openPreference": {
        "message": "Add-on opening preference",
        "description": "The title of the add-on opening preference section in the settings tab."
    },
    "openPreferenceExplain": {
        "message": "Choose how the add-on opens when you click on the icon.",
        "description": "The explanation of the add-on opening preference."
    },
    "newTabCheckbox": {
        "message": "Open in new tab",
        "description": "The label of the radio button to open the add-on in a new tab."
    },
    "newWindowCheckbox": {
        "message": "Open in new window",
        "description": "The label of the radio button to open the add-on in a new window."
    },
    "colorPickerTitle": {
        "message": "Interface color",
        "description": "The title of the interface color section in the settings tab."
    },
    "creditsTitle": {
        "message": "Credits",
        "description": "The title of the credits section in the settings tab."
    },
    "creditsDescription1": {
        "message": "Media Downloader Unleashed!! is a ",
        "description": "The first part of the credits description."
    },
    "creditsDescription2": {
        "message": "free and open-source project",
        "description": "The second part of the credits description."
    },
    "creditsDescription3": {
        "message": " made by ",
        "description": "The third part of the credits description."
    },
    "creditsDescription4": {
        "message": "🦊 helloyanis",
        "description": "The fourth part of the credits description."
    },
    "creditsDescription5": {
        "message": ".",
        "description": "The fifth part of the credits description."
    },
    "rateButton": {
        "message": "Rate",
        "description": "The label of the button to rate the extension."
    },
    "shareButton": {
        "message": "Share",
        "description": "The label of the button to share the extension."
    },
    "donateButton": {
        "message": "Donate",
        "description": "The label of the button to donate to the developer."
    },
    "contactTitle": {
        "message": "Contact me",
        "description": "The title of the contact section in the settings tab."
    },
    "contactDescription": {
        "message": "If you have any questions, suggestions or issues, feel free to contact me!",
        "description": "The description of the contact section in the settings tab."
    },
    "emailButton": {
        "message": "E-mail",
        "description": "The label of the button to contact the developer via e-mail."
    },
    "mastodonButton": {
        "message": "Mastodon",
        "description": "The label of the button to contact the developer via Mastodon."
    },
    "mobileIncompatibleWarning": {
        "message": "⚠️ This option is not compatible for some browsers, like Firefox for Android. If you are using this browser, then change the option back.",
        "description": "The warning shown when the user enables an option that is not compatible with mobile browsers."
    },
    "permissionRequestTitle": {
        "message": "Permission Required",
        "description": "The headline of the permission request popup."
    },
    "permissionRequestDescription": {
        "message": "The extension needs permission to access all URLs to function properly. This is in order to detect media from all websites. Your browsing data is only stored on your device, and not shared with anyone. Please grant the permission, or if you know what you are doing and want scoped storage, you can dismiss this warning.",
        "description": "The description of the permission request popup."
    },
    "grantPermissionButton": {
        "message": "Grant Permission",
        "description": "The label of the button to grant the requested permission."
    },
    "denyPermissionButton": {
        "message": "Don't remind me",
        "description": "The label of the button to deny the requested permission."
    },
    "permissionGrantedMessage": {
        "message": "Permission granted successfully.",
        "description": "The message shown when the permission is granted successfully."
    },
    "permissionDeniedMessage": {
        "message": "Permission denied. The extension may not work as expected.",
        "description": "The message shown when the permission is denied."
    },
    "permissionGrantFailedMessage": {
        "message": "Failed to grant permission. The extension may not work as expected.",
        "description": "The message shown when the permission grant operation fails."
    }
}